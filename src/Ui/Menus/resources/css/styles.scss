@import '~Osm_Ui_Aba/_variables-and-mixins.scss';

.popup-menu {
  background-color: bg-color(bg(""));
  color: fg-color(bg(""), fg(""));
  padding: rem(8px) 0;
  box-shadow: shadow($z-index--menu);
  position: absolute;
  z-index: $z-index--menu;
  display: none;
  overflow-y: auto;
  margin: 0;

  &__items {
    @include no-list-formatting();
  }

  &__item {
    border: none;
    cursor: pointer;
    display: flex;
    font-size: 1rem;
    min-height: 36px;
    min-width: 36px;
    outline: 0;
    padding: rem(12px) rem(16px);
    width: 100%;
    text-align: left;
    white-space: nowrap;

    @include remove-blue-highlight-rectangle-on-touch();

    // two thing you can do visually with a menu item is to disable or hide it
    // use -disabled and -hidden modifiers, respectively

    &:disabled, &.-disabled, &.-disabled:hover, &.-disabled:focus {
      color: fg-color(bg(""), fg("disabled"));
      @include dont-handle-mouse-events();
    }

    // -hidden is set from the View properties
    &.-hidden {
      display: none;
    }

    // each menu item class has its own CSS modifier specified
    // in `type` property

    &.-delimiter, &.-delimiter-copy {
      border-top: 1px solid fg-delimiter-color(bg(""));
    }

    &.-label {
      @include dont-handle-mouse-events();
    }

    &.-command {
    }

    &.-main {
      font-weight: bold;
    }

    &.-dangerous {
      color: fg-color(bg(""), fg("danger"));
    }
  }

  &__link {
    text-decoration: none;
    color: inherit;
    display: flex;
    width: 100%;
  }

  &__icon {
    /**
     * Initially "min-width" was used here, but then we ran into the
     * following problem. Initially menu is hidden and browser doesn't
     * load actual icon due to some optimization. When menu is first shown,
     * icon font is not assigned to <i> child element and for the very short
     * time actual text such as "bold_action" is rendered using default
     * font and in result menu__icon width was 87px, no 40px. At that very
     * moment menu width (and icon width affected it) was used to calculate
     * menu position. Very quickly browser applied correct font and rendered
     * <i> element anew, but wrong menu width already affected incorrect
     * menu position.
     */
    width: rem(40px);
  }

  &__title {
    flex-grow: 1;
  }

  &__input {
    border-width: 1px;
  }

  &__submenu-indicator,
  &__shortcut {
    padding-left: rem(16px);
  }

  &__placeholder {
    width: rem(150px);
    height: rem(200px);
    @include placeholder-background();
  }

  &__viewport {
    display: none;
    padding: 10px;
  }

  &__item:hover, &__item.-hovered {
    background-color: bg-color(bg("primary"));
    color: fg-color(bg("primary"), fg(""));
  }
  @each $bg in $bg-colors { @include bg-rule($bg, "brand") {
    & .popup-menu__item:hover, & .popup-menu__item.-hovered {
      background-color: bg-color($bg);
      color: fg-color($bg, fg(""));
    }
  }}
}

.menu-bar {
  display: flex;

  &__items {
    flex-shrink: 1;
    height: rem(36px);
    overflow: hidden;
    display: flex;
    flex-wrap: nowrap;
    @include no-list-formatting();
  }

  &__item {
    margin: 0 rem(4px);

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }

    &.-delimiter, &.-delimiter-copy {
      border-left: 1px solid transparent;
      padding-left: rem(8px);
    }

    &.-hidden {
      display: none;
    }
  }

  &::before, &::after {
    content: '.';
    width: 0;
    visibility: hidden;
  }

  &.-left {
    &::after {
      flex-grow: 1;
    }
  }

  &.-center {
    &::before, &::after {
      flex-grow: 1;
    }
  }

  &.-right {
    &::before {
      flex-grow: 1;
    }
  }

  @each $bg in $bg-colors { @include bg-rule($bg) {
    .-delimiter, .-delimiter-copy {
      border-color: fg-delimiter-color($bg);
    }
  }}
}

